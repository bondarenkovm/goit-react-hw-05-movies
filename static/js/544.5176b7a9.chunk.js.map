{"version":3,"file":"static/js/544.5176b7a9.chunk.js","mappings":"4NAGaA,EAAOC,EAAAA,EAAAA,GAAH,8HASJC,EAAOD,EAAAA,EAAAA,GAAH,qQAQJE,EAAMF,EAAAA,EAAAA,IAAH,+FAKHG,EAAQH,EAAAA,EAAAA,EAAH,kFAKLI,GAAYJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,qE,SCatB,MAvCA,YAAuC,IAAjBM,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KACtBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACV,EAAD,UACGO,EAAOI,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,SAACZ,EAAD,WACE,UAACG,EAAD,CAAWU,GAAE,UAAKP,GAAL,OAAYI,GAAMI,MAAO,CAAEC,KAAMR,GAA9C,WACE,SAACN,EAAD,CACEe,QAAQ,OACRC,IACEL,EACI,kCAAoCA,EACpC,2DAENM,IAAKP,KAGP,SAACT,EAAD,UAAQS,QAZDD,EAgBd,KAGN,C,0HCHD,UAtBA,WACE,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBC,EAAAA,EAAAA,MAFzB,OAEUjB,EAFV,OAGIe,GAAU,OAAIf,IAHlB,gDAKIkB,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,KAED,iCACE,gDACA,SAAC,IAAD,CAAYpB,OAAQA,EAAQC,KAAK,cAGtC,C,mMCxBKoB,EAAU,mCACVC,EAAW,gCAEV,SAAeL,IAAtB,4CAAO,OAAP,oBAAO,6FACCM,EADD,UACUD,EADV,sCACgDD,GADhD,SAEkBG,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASC,KAAKC,SAHhB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gFACCN,EADD,UACUD,EADV,gCAC0CD,EAD1C,kBAC2DQ,GAD3D,SAEkBL,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASC,KAAKC,SAHhB,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BzB,GAA9B,gFACCkB,EADD,UACUD,EADV,iBAC2BjB,EAD3B,oBACyCgB,GADzC,SAEkBG,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASC,MAHX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8B1B,GAA9B,gFACCkB,EADD,UACUD,EADV,iBAC2BjB,EAD3B,4BACiDgB,GADjD,SAEkBG,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASC,KAAKM,MAHhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiC5B,GAAjC,gFACCkB,EADD,UACUD,EADV,iBAC2BjB,EAD3B,4BACiDgB,GADjD,SAEkBG,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASC,KAAKC,SAHhB,kE","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/fetchMoviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n`;\n\nexport const Item = styled.li`\n  width: calc((100% - 44px) / 4);\n  border: 1px solid #d1d1d1;\n  border-radius: 10px;\n  background-color: #f5f4fa;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n`;\nexport const Img = styled.img`\n  width: 100%;\n  height: 437px;\n  border-radius: 10px 10px 0px 0px;\n`;\nexport const Title = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  padding: 5px;\n`;\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #000000;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, Item, Img, Title, MovieLink } from './MoviesList.styled';\n\nfunction MoviesList({ movies, link }) {\n  const location = useLocation();\n  // console.log(location);\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <Item key={id}>\n            <MovieLink to={`${link}${id}`} state={{ from: location }}>\n              <Img\n                loading=\"lazy\"\n                src={\n                  poster_path\n                    ? 'https://image.tmdb.org/t/p/w500' + poster_path\n                    : 'https://images.prom.ua/211029177_w640_h640_211029177.jpg'\n                }\n                alt={title}\n              />\n\n              <Title>{title}</Title>\n            </MovieLink>\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n  link: PropTypes.string,\n};\n\nexport default MoviesList;\n","import { useState, useEffect } from 'react';\nimport { fetchMoviesTrending } from 'services/fetchMoviesAPI';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n  // console.log(movies);\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const movies = await fetchMoviesTrending();\n        setMovies([...movies]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetch();\n  }, []);\n  return (\n    <>\n      <h1>Trending for today</h1>\n      <MoviesList movies={movies} link=\"movies/\" />\n    </>\n  );\n}\n\nexport default Home;\n","import axios from 'axios';\nconst API_KEY = 'a6e9a41b359e3e0c31a6b9372b7a4849';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMoviesTrending() {\n  const URL = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(URL);\n  return response.data.results;\n}\n\nexport async function fetchMoviesByName(query) {\n  const URL = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await axios.get(URL);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const URL = `${BASE_URL}movie/${id}?api_key=${API_KEY}`;\n  const response = await axios.get(URL);\n  return response.data;\n}\nexport async function fetchMovieCast(id) {\n  const URL = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`;\n  const response = await axios.get(URL);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const URL = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(URL);\n  return response.data.results;\n}\n// export { fetchMoviesTrending, fetchMoviesByName };\n"],"names":["List","styled","Item","Img","Title","MovieLink","Link","movies","link","location","useLocation","map","id","title","poster_path","to","state","from","loading","src","alt","useState","setMovies","useEffect","fetchMoviesTrending","console","log","fetch","API_KEY","BASE_URL","URL","axios","response","data","results","fetchMoviesByName","query","fetchMovieById","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}